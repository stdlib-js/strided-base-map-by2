// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,l=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;var c=t,_=function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&a&&a.call(e,r,t.get),p&&l&&l.call(e,r,t.set),e},f=r()?c:_;var p=function(e,r,t,o,n,a,l,i,u,c){var _,f,p,v,b;if(e<=0)return a;for(_=t<0?(1-e)*t:0,f=n<0?(1-e)*n:0,p=l<0?(1-e)*l:0,b=0;b<e;b++)void 0!==(v=u.call(c,r[_],o[f],b,_,f,p,r,o,a))&&(a[p]=i(v[0],v[1])),_+=t,f+=n,p+=l;return a},v=function(e,r,t,o,n,a,l,i,u,c,_,f,p){var v,b,d,y,s;if(e<=0)return i;for(v=o,b=l,d=c,s=0;s<e;s++)void 0!==(y=f.call(p,r[v],n[b],s,v,b,d,r,n,i))&&(i[d]=_(y[0],y[1])),v+=t,b+=a,d+=u;return i};(function(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})})(p,"ndarray",v);var b=p;export{b as default,v as ndarray};
//# sourceMappingURL=mod.js.map
